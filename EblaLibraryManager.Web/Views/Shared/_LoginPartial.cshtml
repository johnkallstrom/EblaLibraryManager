@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

@{ 
    bool signedIn = SignInManager.IsSignedIn(User);
    string role = string.Empty;

    if (signedIn)
    {
        var user = await UserManager.GetUserAsync(User);
        var roleList = await UserManager.GetRolesAsync(user);
        role = roleList.First();
    }
}

<div class="navbar-nav">
    <a class="nav-item nav-link" asp-controller="Book" asp-action="Index">Books</a>
    @if (signedIn)
    {
        <a class="nav-item nav-link" asp-controller="Manage" asp-action="Profile">Profile</a>
        <a class="nav-item nav-link" asp-controller="Manage" asp-action="Settings">Settings</a>
        <a class="nav-item nav-link" asp-controller="Account" asp-action="Logout">Sign out</a>
    }
    else
    {
        <a class="nav-item nav-link" asp-controller="Account" asp-action="Login">Sign in</a>
        <a class="nav-item nav-link" asp-controller="Account" asp-action="Register">Register</a>
    }
</div>
@if (signedIn)
{
    <span class="ml-auto role-wrapper">@role</span>
}